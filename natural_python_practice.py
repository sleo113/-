''' **=제곱
%는 나머지값
+ = 더하기
- = 뺴기
// = 몫 구하기
* = 곱하기
/ = 나누기
비교연산자 
{
    > < >= <=
== = 왼쪽 피연산자와 오른쪽 피연산자가 같니?
!= = 왼쪽 피연산자와 오른쪽 피연산자가 같은 거가 아니니?
not = 아니다 (부정을 의미)
and = 그리고 
& = 논리곱 연산자.
or = ~하거나 , ~하니?
| = 논리합 연산자

비교 연산자는 여러 개 사용하는 것도 가능.
} 
'''

print( (1+4) and (1+7) <= 9 ) #True


print( (1+4) and (1+7)) 

print( 1+4) 
#23행 문장에서 27행 문자로 바꿀때 없앨 문장을 없애고 1+4에 ()를 붙였더니
#오류가 난다. ()도 필요한 부분에서만 써야 한다. 왜? 신텍스오류 나오니까.

print( (1+4) or (1+7)  ) #True->오답 //5가 나온다.
#왜 5가 나올까?
#or = 또는 ~하거나. and = 그리고
#or를 넣었더니 5가 나오고 and를 넣었더니 8이 나온다. 
#(1+4) and (1+7)에서 and는 1+4를 출력하고 나서(refeat) 1+7를 출력해란 소리.
#즉 5를 출력하고 나서 그 곳에 다시 8를 덮어씌운단 소리.
#(1+4) or (1+7)에서 or는 5를 출력하고 끝.

print( ( (1+4) or (1+7) ) <= 9 )
#(1+4) or (1+7)에다가 ()를 넣었을때 true가 나온다
#( (1+4) or (1+7) ) <= 9과 (1+4) or (1+7) <= 9의 차이가 뭘까?
#전자는 5거나 8이 9보다 작거나 같니? 라고 묻는 것이고
#후자는 5만 출력하고 끝난 것이다. **주의~ 

print( ( (1+4) | (1+7) ) <= 9 ) #True
#실행했더니 False가 나온다. why?
#|는 논리합이다. |=or이 아니다. |는 논리합 연산자다.  
#5 = 0000 0101
#8 = 0000 1000
#--------------
#13 = 0000 1101
#따라서 13이므로 False다.
# 45행에서는 (1+4)+(1+7)를 <= 9 이니 라고 물어 본 것이 된다.
